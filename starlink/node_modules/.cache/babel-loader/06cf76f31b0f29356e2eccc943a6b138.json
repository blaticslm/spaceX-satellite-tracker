{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { hammerRaw } from \"./hammer.js\";\nimport { cos, pi, sin } from \"./math.js\";\nimport { solve2d } from \"./newton.js\"; // Bertin 1953 as a modified Briesemeister\n// https://bl.ocks.org/Fil/5b9ee9636dfb6ffa53443c9006beb642\n\nexport function bertin1953Raw() {\n  var hammer = hammerRaw(1.68, 2),\n      fu = 1.4,\n      k = 12;\n\n  function forward(lambda, phi) {\n    if (lambda + phi < -fu) {\n      var u = (lambda - phi + 1.6) * (lambda + phi + fu) / 8;\n      lambda += u;\n      phi -= 0.8 * u * sin(phi + pi / 2);\n    }\n\n    var r = hammer(lambda, phi);\n    var d = (1 - cos(lambda * phi)) / k;\n\n    if (r[1] < 0) {\n      r[0] *= 1 + d;\n    }\n\n    if (r[1] > 0) {\n      r[1] *= 1 + d / 1.5 * r[0] * r[0];\n    }\n\n    return r;\n  }\n\n  forward.invert = solve2d(forward);\n  return forward;\n}\nexport default function () {\n  // this projection should not be rotated\n  return projection(bertin1953Raw()).rotate([-16.5, -42]).scale(176.57).center([7.93, 0.09]);\n}","map":{"version":3,"sources":["E:/Studying Document drive/laioffer/FullStack/SpaceX项目/spaceX-satellite-tracker/starlink/node_modules/d3-geo-projection/src/bertin.js"],"names":["geoProjection","projection","hammerRaw","cos","pi","sin","solve2d","bertin1953Raw","hammer","fu","k","forward","lambda","phi","u","r","d","invert","rotate","scale","center"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAzB,QAA0C,QAA1C;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,GAAR,EAAaC,EAAb,EAAiBC,GAAjB,QAA2B,WAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;;AACA,OAAO,SAASC,aAAT,GAAyB;AAC9B,MAAIC,MAAM,GAAGN,SAAS,CAAC,IAAD,EAAO,CAAP,CAAtB;AAAA,MACIO,EAAE,GAAG,GADT;AAAA,MACcC,CAAC,GAAG,EADlB;;AAGA,WAASC,OAAT,CAAiBC,MAAjB,EAAyBC,GAAzB,EAA8B;AAE5B,QAAID,MAAM,GAAGC,GAAT,GAAe,CAACJ,EAApB,EAAwB;AACtB,UAAIK,CAAC,GAAG,CAACF,MAAM,GAAGC,GAAT,GAAe,GAAhB,KAAwBD,MAAM,GAAGC,GAAT,GAAeJ,EAAvC,IAA6C,CAArD;AACAG,MAAAA,MAAM,IAAIE,CAAV;AACAD,MAAAA,GAAG,IAAI,MAAMC,CAAN,GAAUT,GAAG,CAACQ,GAAG,GAAGT,EAAE,GAAG,CAAZ,CAApB;AACD;;AAED,QAAIW,CAAC,GAAGP,MAAM,CAACI,MAAD,EAASC,GAAT,CAAd;AAEA,QAAIG,CAAC,GAAG,CAAC,IAAIb,GAAG,CAACS,MAAM,GAAGC,GAAV,CAAR,IAA0BH,CAAlC;;AAEA,QAAIK,CAAC,CAAC,CAAD,CAAD,GAAO,CAAX,EAAc;AACZA,MAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ,IAAIC,CAAZ;AACD;;AACD,QAAID,CAAC,CAAC,CAAD,CAAD,GAAO,CAAX,EAAc;AACZA,MAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ,IAAIC,CAAC,GAAG,GAAJ,GAAUD,CAAC,CAAC,CAAD,CAAX,GAAiBA,CAAC,CAAC,CAAD,CAA9B;AACD;;AAED,WAAOA,CAAP;AACD;;AAEDJ,EAAAA,OAAO,CAACM,MAAR,GAAiBX,OAAO,CAACK,OAAD,CAAxB;AACA,SAAOA,OAAP;AACD;AAED,eAAe,YAAW;AACxB;AACA,SAAOV,UAAU,CAACM,aAAa,EAAd,CAAV,CACJW,MADI,CACG,CAAC,CAAC,IAAF,EAAQ,CAAC,EAAT,CADH,EAEJC,KAFI,CAEE,MAFF,EAGJC,MAHI,CAGG,CAAC,IAAD,EAAO,IAAP,CAHH,CAAP;AAID","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\r\nimport {hammerRaw} from \"./hammer.js\";\r\nimport {cos, pi, sin} from \"./math.js\";\r\nimport {solve2d} from \"./newton.js\";\r\n\r\n// Bertin 1953 as a modified Briesemeister\r\n// https://bl.ocks.org/Fil/5b9ee9636dfb6ffa53443c9006beb642\r\nexport function bertin1953Raw() {\r\n  var hammer = hammerRaw(1.68, 2),\r\n      fu = 1.4, k = 12;\r\n\r\n  function forward(lambda, phi) {\r\n\r\n    if (lambda + phi < -fu) {\r\n      var u = (lambda - phi + 1.6) * (lambda + phi + fu) / 8;\r\n      lambda += u;\r\n      phi -= 0.8 * u * sin(phi + pi / 2);\r\n    }\r\n\r\n    var r = hammer(lambda, phi);\r\n\r\n    var d = (1 - cos(lambda * phi)) / k;\r\n\r\n    if (r[1] < 0) {\r\n      r[0] *= 1 + d;\r\n    }\r\n    if (r[1] > 0) {\r\n      r[1] *= 1 + d / 1.5 * r[0] * r[0];\r\n    }\r\n\r\n    return r;\r\n  }\r\n  \r\n  forward.invert = solve2d(forward);\r\n  return forward;\r\n}\r\n\r\nexport default function() {\r\n  // this projection should not be rotated\r\n  return projection(bertin1953Raw())\r\n    .rotate([-16.5, -42])\r\n    .scale(176.57)\r\n    .center([7.93, 0.09]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}