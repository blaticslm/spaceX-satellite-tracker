{"ast":null,"code":"import ascending from \"./ascending.js\";\nexport default function bisector(f) {\n  let delta = f;\n  let compare1 = f;\n  let compare2 = f;\n\n  if (f.length !== 2) {\n    delta = (d, x) => f(d) - x;\n\n    compare1 = ascending;\n\n    compare2 = (d, x) => ascending(f(d), x);\n  }\n\n  function left(a, x) {\n    let lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      } while (lo < hi);\n    }\n\n    return lo;\n  }\n\n  function right(a, x) {\n    let lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;else hi = mid;\n      } while (lo < hi);\n    }\n\n    return lo;\n  }\n\n  function center(a, x) {\n    let lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {\n    left,\n    center,\n    right\n  };\n}","map":{"version":3,"sources":["E:/Studying Document drive/laioffer/FullStack/SpaceX项目/spaceX-satellite-tracker/starlink/node_modules/d3-array/src/bisector.js"],"names":["ascending","bisector","f","delta","compare1","compare2","length","d","x","left","a","lo","hi","mid","right","center","i"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AAEA,eAAe,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AAClC,MAAIC,KAAK,GAAGD,CAAZ;AACA,MAAIE,QAAQ,GAAGF,CAAf;AACA,MAAIG,QAAQ,GAAGH,CAAf;;AAEA,MAAIA,CAAC,CAACI,MAAF,KAAa,CAAjB,EAAoB;AAClBH,IAAAA,KAAK,GAAG,CAACI,CAAD,EAAIC,CAAJ,KAAUN,CAAC,CAACK,CAAD,CAAD,GAAOC,CAAzB;;AACAJ,IAAAA,QAAQ,GAAGJ,SAAX;;AACAK,IAAAA,QAAQ,GAAG,CAACE,CAAD,EAAIC,CAAJ,KAAUR,SAAS,CAACE,CAAC,CAACK,CAAD,CAAF,EAAOC,CAAP,CAA9B;AACD;;AAED,WAASC,IAAT,CAAcC,CAAd,EAAiBF,CAAjB,EAA2C;AAAA,QAAvBG,EAAuB,uEAAlB,CAAkB;AAAA,QAAfC,EAAe,uEAAVF,CAAC,CAACJ,MAAQ;;AACzC,QAAIK,EAAE,GAAGC,EAAT,EAAa;AACX,UAAIR,QAAQ,CAACI,CAAD,EAAIA,CAAJ,CAAR,KAAmB,CAAvB,EAA0B,OAAOI,EAAP;;AAC1B,SAAG;AACD,cAAMC,GAAG,GAAIF,EAAE,GAAGC,EAAN,KAAc,CAA1B;AACA,YAAIP,QAAQ,CAACK,CAAC,CAACG,GAAD,CAAF,EAASL,CAAT,CAAR,GAAsB,CAA1B,EAA6BG,EAAE,GAAGE,GAAG,GAAG,CAAX,CAA7B,KACKD,EAAE,GAAGC,GAAL;AACN,OAJD,QAISF,EAAE,GAAGC,EAJd;AAKD;;AACD,WAAOD,EAAP;AACD;;AAED,WAASG,KAAT,CAAeJ,CAAf,EAAkBF,CAAlB,EAA4C;AAAA,QAAvBG,EAAuB,uEAAlB,CAAkB;AAAA,QAAfC,EAAe,uEAAVF,CAAC,CAACJ,MAAQ;;AAC1C,QAAIK,EAAE,GAAGC,EAAT,EAAa;AACX,UAAIR,QAAQ,CAACI,CAAD,EAAIA,CAAJ,CAAR,KAAmB,CAAvB,EAA0B,OAAOI,EAAP;;AAC1B,SAAG;AACD,cAAMC,GAAG,GAAIF,EAAE,GAAGC,EAAN,KAAc,CAA1B;AACA,YAAIP,QAAQ,CAACK,CAAC,CAACG,GAAD,CAAF,EAASL,CAAT,CAAR,IAAuB,CAA3B,EAA8BG,EAAE,GAAGE,GAAG,GAAG,CAAX,CAA9B,KACKD,EAAE,GAAGC,GAAL;AACN,OAJD,QAISF,EAAE,GAAGC,EAJd;AAKD;;AACD,WAAOD,EAAP;AACD;;AAED,WAASI,MAAT,CAAgBL,CAAhB,EAAmBF,CAAnB,EAA6C;AAAA,QAAvBG,EAAuB,uEAAlB,CAAkB;AAAA,QAAfC,EAAe,uEAAVF,CAAC,CAACJ,MAAQ;AAC3C,UAAMU,CAAC,GAAGP,IAAI,CAACC,CAAD,EAAIF,CAAJ,EAAOG,EAAP,EAAWC,EAAE,GAAG,CAAhB,CAAd;AACA,WAAOI,CAAC,GAAGL,EAAJ,IAAUR,KAAK,CAACO,CAAC,CAACM,CAAC,GAAG,CAAL,CAAF,EAAWR,CAAX,CAAL,GAAqB,CAACL,KAAK,CAACO,CAAC,CAACM,CAAD,CAAF,EAAOR,CAAP,CAArC,GAAiDQ,CAAC,GAAG,CAArD,GAAyDA,CAAhE;AACD;;AAED,SAAO;AAACP,IAAAA,IAAD;AAAOM,IAAAA,MAAP;AAAeD,IAAAA;AAAf,GAAP;AACD","sourcesContent":["import ascending from \"./ascending.js\";\r\n\r\nexport default function bisector(f) {\r\n  let delta = f;\r\n  let compare1 = f;\r\n  let compare2 = f;\r\n\r\n  if (f.length !== 2) {\r\n    delta = (d, x) => f(d) - x;\r\n    compare1 = ascending;\r\n    compare2 = (d, x) => ascending(f(d), x);\r\n  }\r\n\r\n  function left(a, x, lo = 0, hi = a.length) {\r\n    if (lo < hi) {\r\n      if (compare1(x, x) !== 0) return hi;\r\n      do {\r\n        const mid = (lo + hi) >>> 1;\r\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\r\n        else hi = mid;\r\n      } while (lo < hi);\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function right(a, x, lo = 0, hi = a.length) {\r\n    if (lo < hi) {\r\n      if (compare1(x, x) !== 0) return hi;\r\n      do {\r\n        const mid = (lo + hi) >>> 1;\r\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\r\n        else hi = mid;\r\n      } while (lo < hi);\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function center(a, x, lo = 0, hi = a.length) {\r\n    const i = left(a, x, lo, hi - 1);\r\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\r\n  }\r\n\r\n  return {left, center, right};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}