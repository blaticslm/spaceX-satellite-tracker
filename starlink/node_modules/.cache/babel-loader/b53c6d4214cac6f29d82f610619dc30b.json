{"ast":null,"code":"var _jsxFileName = \"K:\\\\Laioffer\\\\FullStack\\\\SpaceX\\u9879\\u76EE\\\\starlink\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from \"antd\"; //整体布局是行列式\n\nimport axios from \"axios\";\nimport SatSetting from \"./SatSetting\";\nimport SatelliteList from \"./SatelliteList\";\nimport WorldMap from \"./WorldMap\";\nimport { SAT_API_KEY, NEARBY_SATELLITE_PREFIX, STARLINK_CATEGORY } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      //状态值， 数据的transfer从SatSetting里传到SetList里。而不是得到satSetting的response传给main再传给satList\n      satInfo: null,\n      settings: null,\n      isLoadingList: false,\n      satList: []\n    };\n\n    this.showNearbySatellite = setting => {\n      console.log(setting);\n      this.setState({\n        settings: setting\n      }); //fetch sat list from the server\n\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      //step 1: get the settings\n      //step 2: fetch satellite list from the server\n      //  case 1: successful ---> update satInfo\n      //  case 2: fail ---> display error\n      const {\n        latitude,\n        longitude,\n        altitude,\n        search_radius\n      } = setting; //此处/api/意思是代理\n\n      const url = `/api/${NEARBY_SATELLITE_PREFIX}/${latitude}/${longitude}/${altitude}/${search_radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        //加载时loading true\n        isLoadingList: true\n      });\n      axios.get(url).then(response => {\n        console.log(\"Main:fetchSatellite\");\n        console.log(response);\n        this.setState({\n          satInfo: response.data,\n          isLoadingList: false\n        }); //传给info，并且loading结束了之后就false\n      }).catch(err => {\n        console.log(\"error in fetch satellite: \", err);\n        this.setState({\n          isLoadingList: false\n        });\n      });\n    };\n\n    this.showMap = selected => {\n      console.log(selected); //spaceX4开始\n\n      this.setState(preState => ({ ...preState,\n        //其他值不变\n        satList: [...selected] //修改satList属性。 ...selected是浅copy\n\n      }));\n    };\n  }\n\n  // Main - isLoading - SatList\n  // Satlist需要检测是不是有loading的情况\n  //this.showNearbysatellite是子到父传递\n  render() {\n    const {\n      satInfo,\n      settings,\n      satList,\n      isLoadingList\n    } = this.state; //解构一下来确定状态\n\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"left-side\",\n        span: 8,\n        children: [/*#__PURE__*/_jsxDEV(SatSetting, {\n          onShow: this.showNearbySatellite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SatelliteList, {\n          satInfo: satInfo,\n          isLoad: isLoadingList,\n          onShowMap: this.showMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"right-side\",\n        span: 16,\n        children: /*#__PURE__*/_jsxDEV(WorldMap, {\n          satData: satList,\n          observerData: settings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } //main: onShowMap = {this.showMap}, 设定好子传父的数据路径\n  //SatelliteList: onClick = {this.onShowSatMap} ---> onShowSatMap{this.props.onShowMap(this.state.selected)}\n  //也就是说，父告诉子要更新，子在点击更新之后把数据回传给父的onShowMap\n\n\n}\n\nexport default Main;","map":{"version":3,"sources":["K:/Laioffer/FullStack/SpaceX项目/starlink/src/components/Main.js"],"names":["React","Component","Row","Col","axios","SatSetting","SatelliteList","WorldMap","SAT_API_KEY","NEARBY_SATELLITE_PREFIX","STARLINK_CATEGORY","Main","state","satInfo","settings","isLoadingList","satList","showNearbySatellite","setting","console","log","setState","fetchSatellite","latitude","longitude","altitude","search_radius","url","get","then","response","data","catch","err","showMap","selected","preState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAOC,GAAP,EAAYC,GAAZ,QAAsB,MAAtB,C,CAA8B;;AAC9B,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAAQC,WAAR,EAAqBC,uBAArB,EAA8CC,iBAA9C,QAAsE,cAAtE;;;AAGA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBW,KADyB,GACjB;AAAE;AACNC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,QAAQ,EAAE,IAFN;AAGJC,MAAAA,aAAa,EAAE,KAHX;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADiB;;AAAA,SA6BzBC,mBA7ByB,GA6BHC,OAAO,IAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAACI;AAAV,OAAd,EAF6B,CAG7B;;AACA,WAAKI,cAAL,CAAoBJ,OAApB;AACH,KAlCwB;;AAAA,SAoCzBI,cApCyB,GAoCRJ,OAAO,IAAI;AACxB;AACA;AACA;AACA;AAEA,YAAM;AAACK,QAAAA,QAAD;AAAWC,QAAAA,SAAX;AAAsBC,QAAAA,QAAtB;AAAgCC,QAAAA;AAAhC,UAAiDR,OAAvD,CANwB,CAOxB;;AACA,YAAMS,GAAG,GAAI,QAAOlB,uBAAwB,IAAGc,QAAS,IAAGC,SAAU,IAAGC,QAAS,IAAGC,aAAc,IAAGhB,iBAAkB,YAAWF,WAAY,EAA9I;AACA,WAAKa,QAAL,CAAc;AAAE;AACZN,QAAAA,aAAa,EAAE;AADL,OAAd;AAGAX,MAAAA,KAAK,CAACwB,GAAN,CAAUD,GAAV,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACA,aAAKT,QAAL,CAAc;AAACR,UAAAA,OAAO,EAAEiB,QAAQ,CAACC,IAAnB;AAAyBhB,UAAAA,aAAa,EAAE;AAAxC,SAAd,EAHc,CAGgD;AACjE,OALL,EAMKiB,KANL,CAMWC,GAAG,IAAI;AACVd,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0Ca,GAA1C;AACA,aAAKZ,QAAL,CAAc;AACVN,UAAAA,aAAa,EAAE;AADL,SAAd;AAGH,OAXL;AAaH,KA7DwB;;AAAA,SA+DzBmB,OA/DyB,GA+DfC,QAAQ,IAAI;AAClBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ,EADkB,CAElB;;AACA,WAAKd,QAAL,CAAce,QAAQ,KAAK,EACvB,GAAGA,QADoB;AACV;AACbpB,QAAAA,OAAO,EAAE,CAAC,GAAGmB,QAAJ,CAFc,CAEA;;AAFA,OAAL,CAAtB;AAKH,KAvEwB;AAAA;;AAOzB;AACA;AAEA;AACAE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACxB,MAAAA,OAAD;AAAUC,MAAAA,QAAV;AAAoBE,MAAAA,OAApB;AAA6BD,MAAAA;AAA7B,QAA8C,KAAKH,KAAzD,CADK,CAC0D;;AAC/D,wBACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,IAAI,EAAI,CAAnC;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,MAAM,EAAI,KAAKK;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,aAAD;AAAe,UAAA,OAAO,EAAIJ,OAA1B;AAAmC,UAAA,MAAM,EAAIE,aAA7C;AAA4D,UAAA,SAAS,EAAI,KAAKmB;AAA9E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,IAAI,EAAI,EAApC;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAIlB,OAArB;AAA8B,UAAA,YAAY,EAAEF;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAxBwB,CAyBzB;AACA;AACA;;;AA3ByB;;AA0E7B,eAAeH,IAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport{Row, Col} from \"antd\"; //整体布局是行列式\r\nimport axios from \"axios\";\r\n\r\nimport SatSetting from \"./SatSetting\";\r\nimport SatelliteList from \"./SatelliteList\";\r\nimport WorldMap from \"./WorldMap\";\r\n\r\nimport {SAT_API_KEY, NEARBY_SATELLITE_PREFIX, STARLINK_CATEGORY} from \"../constants\";\r\n\r\n\r\nclass Main extends Component {\r\n    state = { //状态值， 数据的transfer从SatSetting里传到SetList里。而不是得到satSetting的response传给main再传给satList\r\n        satInfo: null,\r\n        settings: null,\r\n        isLoadingList: false,\r\n        satList: [],\r\n    }\r\n    // Main - isLoading - SatList\r\n    // Satlist需要检测是不是有loading的情况\r\n\r\n    //this.showNearbysatellite是子到父传递\r\n    render() {\r\n        const {satInfo, settings, satList, isLoadingList} = this.state //解构一下来确定状态\r\n        return (\r\n            <Row className=\"main\">\r\n                <Col className=\"left-side\" span = {8}>\r\n                    <SatSetting onShow = {this.showNearbySatellite}/>\r\n                    <SatelliteList satInfo = {satInfo} isLoad = {isLoadingList} onShowMap = {this.showMap}/>\r\n                </Col>\r\n                <Col className=\"right-side\" span = {16}>\r\n                    <WorldMap satData = {satList} observerData={settings}/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    //main: onShowMap = {this.showMap}, 设定好子传父的数据路径\r\n    //SatelliteList: onClick = {this.onShowSatMap} ---> onShowSatMap{this.props.onShowMap(this.state.selected)}\r\n    //也就是说，父告诉子要更新，子在点击更新之后把数据回传给父的onShowMap\r\n\r\n    showNearbySatellite = setting => {\r\n        console.log(setting)\r\n        this.setState({settings:setting});\r\n        //fetch sat list from the server\r\n        this.fetchSatellite(setting)\r\n    }\r\n\r\n    fetchSatellite = setting => {\r\n        //step 1: get the settings\r\n        //step 2: fetch satellite list from the server\r\n        //  case 1: successful ---> update satInfo\r\n        //  case 2: fail ---> display error\r\n\r\n        const {latitude, longitude, altitude, search_radius} = setting;\r\n        //此处/api/意思是代理\r\n        const url = `/api/${NEARBY_SATELLITE_PREFIX}/${latitude}/${longitude}/${altitude}/${search_radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\r\n        this.setState({ //加载时loading true\r\n            isLoadingList: true,\r\n        })\r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(\"Main:fetchSatellite\")\r\n                console.log(response)\r\n                this.setState({satInfo: response.data, isLoadingList: false}) //传给info，并且loading结束了之后就false\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error in fetch satellite: \", err)\r\n                this.setState({\r\n                    isLoadingList: false,\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    showMap = selected => {\r\n        console.log(selected)\r\n        //spaceX4开始\r\n        this.setState(preState => ({\r\n            ...preState, //其他值不变\r\n            satList: [...selected] //修改satList属性。 ...selected是浅copy\r\n        }))\r\n\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}