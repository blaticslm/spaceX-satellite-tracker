{"ast":null,"code":"var _jsxFileName = \"K:\\\\Laioffer\\\\FullStack\\\\SpaceX\\u9879\\u76EE\\\\starlink\\\\src\\\\components\\\\SatelliteList.js\";\nimport React, { Component } from 'react';\nimport { Button, List, Avatar, Checkbox, Spin } from \"antd\";\nimport satellite from \"../assets/images/satellite.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SatelliteList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selected: []\n    };\n\n    this.onChange = e => {\n      //on change是记录checkbox时的记录的数据，从SpaceX3开始就是利用这个来做地图上的显示\n      console.log(e.target); //step 1: get current selected/unselected satellite\n      //step 2: remove/add the satellite to the list\n\n      const {\n        dataInfo,\n        checked\n      } = e.target; //拿信息\n\n      const {\n        selected\n      } = this.state; //拿list\n\n      const list = this.addOrRemove(dataInfo, checked, selected);\n      this.setState({\n        selected: list\n      });\n      console.log(list);\n    };\n\n    this.addOrRemove = (item, status, list) => {\n      //case 1: check to true\n      //  - not in the list: add\n      //  - in the list: do nothing\n      //case 2: check is false\n      //  - in the list: remove\n      //  - not in the list: do nothing\n      //判断能不能找到, true or false\n      const found = list.some(sat => sat.satid === item.satid); //case 1: check to true but nothing find\n\n      if (status && !found) {\n        list = [...list, item];\n      }\n\n      if (!status && found) {\n        list = list.filter(sat => sat.satid !== item.satid); //不相等的保留， 相等的删除\n      }\n\n      return list;\n    };\n  }\n\n  render() {\n    const satList = this.props.satInfo ? this.props.satInfo.above : [];\n    const {\n      selected\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sat-list-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"sat-list-btn\",\n          size: \"large\",\n          disabled: selected.length === 0,\n          children: \"track Satellite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), this.props.isLoad ?\n      /*#__PURE__*/\n      //这里是父传子，检测到loading： spin\n      _jsxDEV(\"div\", {\n        className: \"spin-box\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"I am running!\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        className: \"sat-list\",\n        itemLayout: \"horizontal\",\n        dataSource: satList,\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            dataInfo: item,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 47\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: satellite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 45\n            }, this),\n            title: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.satname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 48\n            }, this),\n            description: `launch Date: ${item.launchDate}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SatelliteList;","map":{"version":3,"sources":["K:/Laioffer/FullStack/SpaceX项目/starlink/src/components/SatelliteList.js"],"names":["React","Component","Button","List","Avatar","Checkbox","Spin","SatelliteList","state","selected","onChange","e","console","log","target","dataInfo","checked","list","addOrRemove","setState","item","status","found","some","sat","satid","filter","render","satList","props","satInfo","above","length","isLoad","satellite","satname","launchDate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, List, Avatar, Checkbox, Spin} from \"antd\";\r\nimport satellite from '../assets/images/satellite.svg';\r\n\r\nclass SatelliteList extends Component {\r\n    state = {\r\n        selected: [],\r\n\r\n\r\n    }\r\n    render() {\r\n        const satList = this.props.satInfo ? this.props.satInfo.above : [];\r\n        const {selected} = this.state;\r\n        return (\r\n            <div className=\"sat-list-box\">\r\n                <div className=\"btn-container\">\r\n                    <Button className = \"sat-list-btn\" size=\"large\" disabled={selected.length === 0}>\r\n                        track Satellite\r\n                    </Button>\r\n                </div>\r\n                <hr />\r\n                {\r\n                    this.props.isLoad ? //这里是父传子，检测到loading： spin\r\n                        <div className=\"spin-box\">\r\n                            <Spin tip =\"I am running!\" size = \"large\"/>\r\n                        </div>\r\n                        :\r\n                        <List\r\n                            className=\"sat-list\"\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={satList}\r\n                            renderItem={item => (\r\n                                <List.Item\r\n                                    actions={[<Checkbox dataInfo={item} onChange={this.onChange}/>]}\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        avatar={\r\n                                            <Avatar src={satellite} />\r\n                                        }\r\n                                        title={<p>{item.satname}</p>}\r\n                                        description={`launch Date: ${item.launchDate}`}\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onChange = e => { //on change是记录checkbox时的记录的数据，从SpaceX3开始就是利用这个来做地图上的显示\r\n        console.log(e.target)\r\n        //step 1: get current selected/unselected satellite\r\n        //step 2: remove/add the satellite to the list\r\n\r\n        const {dataInfo, checked } = e.target //拿信息\r\n        const {selected} = this.state //拿list\r\n        const list = this.addOrRemove(dataInfo, checked, selected)\r\n        this.setState({selected: list})\r\n        console.log(list)\r\n\r\n    }\r\n\r\n    addOrRemove= (item,status,list) => {\r\n        //case 1: check to true\r\n        //  - not in the list: add\r\n        //  - in the list: do nothing\r\n\r\n        //case 2: check is false\r\n        //  - in the list: remove\r\n        //  - not in the list: do nothing\r\n\r\n        //判断能不能找到, true or false\r\n        const found = list.some(sat => sat.satid === item.satid)\r\n\r\n        //case 1: check to true but nothing find\r\n        if(status && !found) {\r\n            list = [...list, item]\r\n        }\r\n\r\n        if(!status && found) {\r\n            list = list.filter(sat => sat.satid !== item.satid) //不相等的保留， 相等的删除\r\n        }\r\n\r\n        return list\r\n    }\r\n}\r\n\r\nexport default SatelliteList;"]},"metadata":{},"sourceType":"module"}